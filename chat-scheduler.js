// –§–∞–π–ª: chat-customization.js
// –£–ª—É—á—à–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–æ–≤

document.addEventListener('DOMContentLoaded', function() {
    setTimeout(function() {
        initChatCustomization();
    }, 100);
});

function initChatCustomization() {
    const burgerMenuContent = document.getElementById('burgerMenuContent');
    
    if (!burgerMenuContent) {
        console.error('–ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –ø—É–Ω–∫—Ç –º–µ–Ω—é –¥–ª—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–æ–≤
    const chatCustomizationItem = document.createElement('div');
    chatCustomizationItem.className = 'burger-menu-item';
    chatCustomizationItem.id = 'chatCustomizationBtn';
    chatCustomizationItem.innerHTML = '<i class="fas fa-palette"></i> –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —á–∞—Ç–æ–≤';
    
    // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç "–¢–µ–º–∞" –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –Ω–µ–≥–æ
    const themeBtn = document.getElementById('themeBtn');
    if (themeBtn && themeBtn.parentNode) {
        themeBtn.parentNode.insertBefore(chatCustomizationItem, themeBtn.nextSibling);
    } else {
        burgerMenuContent.appendChild(chatCustomizationItem);
    }
    
    createChatCustomizationModal();
    loadChatCustomizationSettings();
    setupEventListeners();
    adaptForMobile();
}

function createChatCustomizationModal() {
    const chatCustomizationModal = document.createElement('div');
    chatCustomizationModal.className = 'modal';
    chatCustomizationModal.id = 'chatCustomizationModal';
    chatCustomizationModal.innerHTML = `
        <div class="modal-content">
            <div style="text-align: center; margin-bottom: 20px;">
                <div style="font-size: 48px; margin-bottom: 10px; color: #4facfe;">
                    <i class="fas fa-edit"></i>
                </div>
                <h3 style="margin-bottom: 5px;">–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —á–∞—Ç–æ–≤</h3>
                <p style="opacity: 0.8; font-size: 14px;">
                    –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥ —Å–µ–±—è
                </p>
            </div>
            
            <div class="settings-section">
                <h4><i class="fas fa-font"></i> –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞</h4>
                
                <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ -->
                <div class="size-indicator" style="text-align: center; margin: 15px 0; padding: 10px; background: var(--search-bg); border-radius: 10px;">
                    <div style="font-size: 12px; opacity: 0.7; margin-bottom: 5px;">–¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä</div>
                    <div id="currentSizeDisplay" style="font-size: 24px; font-weight: bold; color: #4facfe;">14px</div>
                </div>
                
                <!-- –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–µ—Å–µ—Ç—ã -->
                <div class="preset-buttons" style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 8px; margin: 20px 0;">
                    <button class="preset-btn" data-size="12" style="padding: 12px; border: 2px solid var(--border-color); border-radius: 10px; background: var(--action-btn-bg); color: var(--text-color); cursor: pointer; transition: all 0.3s;">
                        <div style="font-size: 10px;">A</div>
                        <div style="font-size: 10px; margin-top: 5px;">–ú–∞–ª–µ–Ω—å–∫–∏–π</div>
                    </button>
                    <button class="preset-btn" data-size="14" style="padding: 12px; border: 2px solid var(--border-color); border-radius: 10px; background: var(--action-btn-bg); color: var(--text-color); cursor: pointer; transition: all 0.3s;">
                        <div style="font-size: 12px;">A</div>
                        <div style="font-size: 10px; margin-top: 5px;">–°—Ç–∞–Ω–¥–∞—Ä—Ç</div>
                    </button>
                    <button class="preset-btn" data-size="16" style="padding: 12px; border: 2px solid var(--border-color); border-radius: 10px; background: var(--action-btn-bg); color: var(--text-color); cursor: pointer; transition: all 0.3s;">
                        <div style="font-size: 14px;">A</div>
                        <div style="font-size: 10px; margin-top: 5px;">–ë–æ–ª—å—à–æ–π</div>
                    </button>
                    <button class="preset-btn" data-size="18" style="padding: 12px; border: 2px solid var(--border-color); border-radius: 10px; background: var(--action-btn-bg); color: var(--text-color); cursor: pointer; transition: all 0.3s;">
                        <div style="font-size: 16px;">A</div>
                        <div style="font-size: 10px; margin-top: 5px;">–û–≥—Ä–æ–º–Ω—ã–π</div>
                    </button>
                </div>
                
                <!-- –¢–æ—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ -->
                <div class="custom-control" style="margin: 25px 0;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                        <span style="font-weight: 500;">–¢–æ—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞:</span>
                        <span id="customSizeValue" style="font-weight: bold; color: #4facfe; font-size: 16px;">14px</span>
                    </div>
                    <div style="position: relative;">
                        <input type="range" id="fontSizeSlider" min="10" max="22" value="14" step="1" 
                               style="width: 100%; height: 6px; border-radius: 3px; background: var(--search-bg); outline: none;">
                        <div style="display: flex; justify-content: space-between; margin-top: 8px;">
                            <span style="font-size: 10px; opacity: 0.7;">10px</span>
                            <span style="font-size: 10px; opacity: 0.7;">22px</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ -->
            <div class="settings-section">
                <h4><i class="fas fa-eye"></i> –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</h4>
                <div class="live-preview" style="background: var(--search-bg); padding: 20px; border-radius: 15px; margin-top: 15px;">
                    <div class="preview-header" style="text-align: center; margin-bottom: 15px;">
                        <div class="preview-avatar" style="width: 50px; height: 50px; border-radius: 50%; background: linear-gradient(135deg, #4facfe, #00f2fe); margin: 0 auto 10px; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; font-size: 18px;">
                            –Ø
                        </div>
                        <div style="font-weight: bold;">–í–∞—à —á–∞—Ç</div>
                        <div style="font-size: 12px; opacity: 0.7;">—Å–µ–≥–æ–¥–Ω—è</div>
                    </div>
                    
                    <div class="preview-messages" style="display: flex; flex-direction: column; gap: 10px;">
                        <div class="preview-message my-message" style="align-self: flex-end; max-width: 80%; padding: 12px 15px; border-radius: 18px; background: linear-gradient(135deg, #4facfe, #00f2fe); color: white; box-shadow: 0 2px 8px rgba(79, 172, 254, 0.3);">
                            –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?
                        </div>
                        <div class="preview-message other-message" style="align-self: flex-start; max-width: 80%; padding: 12px 15px; border-radius: 18px; background: var(--other-msg-bg); color: var(--text-color); border: 1px solid var(--border-color);">
                            –û—Ç–ª–∏—á–Ω–æ! –°–º–æ—Ç—Ä–∏ –∫–∞–∫ –∫—Ä—É—Ç–æ –≤—ã–≥–ª—è–¥–∏—Ç —á–∞—Ç üëç
                        </div>
                        <div class="preview-message my-message" style="align-self: flex-end; max-width: 70%; padding: 12px 15px; border-radius: 18px; background: linear-gradient(135deg, #4facfe, #00f2fe); color: white; box-shadow: 0 2px 8px rgba(79, 172, 254, 0.3);">
                            –î–∞, –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ —á–∏—Ç–∞—Ç—å!
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ -->
            <div class="settings-section">
                <h4><i class="fas fa-sliders-h"></i> –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</h4>
                <div class="additional-options" style="display: grid; gap: 10px; margin-top: 15px;">
                    <label class="option-toggle" style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: var(--action-btn-bg); border-radius: 10px; cursor: pointer;">
                        <span>–ñ–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö</span>
                        <label class="switch">
                            <input type="checkbox" id="boldTextToggle">
                            <span class="slider"></span>
                        </label>
                    </label>
                    
                    <label class="option-toggle" style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: var(--action-btn-bg); border-radius: 10px; cursor: pointer;">
                        <span>–£–≤–µ–ª–∏—á–∏—Ç—å –º–µ–∂—Å—Ç—Ä–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª</span>
                        <label class="switch">
                            <input type="checkbox" id="lineHeightToggle">
                            <span class="slider"></span>
                        </label>
                    </label>
                    
                    <label class="option-toggle" style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: var(--action-btn-bg); border-radius: 10px; cursor: pointer;">
                        <span>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –≤ %</span>
                        <label class="switch">
                            <input type="checkbox" id="showPercentageToggle">
                            <span class="slider"></span>
                        </label>
                    </label>
                </div>
            </div>
            
            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
            <div class="stats-section" style="background: var(--search-bg); padding: 15px; border-radius: 10px; margin: 20px 0; text-align: center;">
                <div style="display: flex; justify-content: space-around;">
                    <div>
                        <div style="font-size: 24px; font-weight: bold; color: #4facfe;" id="readabilityScore">95%</div>
                        <div style="font-size: 12px; opacity: 0.7;">–£–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ—Å—Ç—å</div>
                    </div>
                    <div>
                        <div style="font-size: 24px; font-weight: bold; color: #4facfe;" id="messageCount">0</div>
                        <div style="font-size: 12px; opacity: 0.7;">–°–æ–æ–±—â–µ–Ω–∏–π/—ç–∫—Ä–∞–Ω</div>
                    </div>
                </div>
            </div>
            
            <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
            <div class="action-buttons" style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px; margin-top: 20px;">
                <button class="action-btn secondary" id="testInRealChatBtn" style="padding: 12px; border: 2px solid var(--border-color); border-radius: 10px; background: transparent; color: var(--text-color); cursor: pointer; transition: all 0.3s;">
                    <i class="fas fa-comments"></i> –¢–µ—Å—Ç –≤ —á–∞—Ç–µ
                </button>
                <button class="action-btn secondary" id="resetChatCustomizationBtn" style="padding: 12px; border: 2px solid var(--border-color); border-radius: 10px; background: transparent; color: var(--text-color); cursor: pointer; transition: all 0.3s;">
                    <i class="fas fa-undo"></i> –°–±—Ä–æ—Å
                </button>
                <button class="action-btn primary" id="saveChatCustomizationBtn" style="padding: 12px; border: none; border-radius: 10px; background: linear-gradient(135deg, #4facfe, #00f2fe); color: white; cursor: pointer; font-weight: bold; grid-column: 1 / -1; transition: all 0.3s;">
                    <i class="fas fa-check"></i> –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(chatCustomizationModal);
}

function setupEventListeners() {
    // –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
    document.getElementById('chatCustomizationBtn').addEventListener('click', showChatCustomizationModal);
    
    // –ö–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è/—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    document.getElementById('saveChatCustomizationBtn').addEventListener('click', saveChatCustomizationSettings);
    document.getElementById('resetChatCustomizationBtn').addEventListener('click', resetChatCustomizationSettings);
    document.getElementById('testInRealChatBtn').addEventListener('click', testInRealChat);
    
    // –ü—Ä–µ—Å–µ—Ç—ã
    document.querySelectorAll('.preset-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const size = this.getAttribute('data-size');
            setFontSizeByPreset(size);
            highlightActivePreset(this);
        });
    });
    
    // –°–ª–∞–π–¥–µ—Ä
    document.getElementById('fontSizeSlider').addEventListener('input', function() {
        updateFontSizePreview(this.value);
        updateReadabilityStats(this.value);
        highlightMatchingPreset(this.value);
    });
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
    document.getElementById('boldTextToggle').addEventListener('change', updatePreview);
    document.getElementById('lineHeightToggle').addEventListener('change', updatePreview);
    document.getElementById('showPercentageToggle').addEventListener('change', togglePercentageDisplay);
}

function showChatCustomizationModal() {
    const modal = document.getElementById('chatCustomizationModal');
    modal.classList.add('active');
    document.getElementById('burgerMenuContent').classList.remove('active');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    updateAllPreviews();
    updateReadabilityStats(document.getElementById('fontSizeSlider').value);
}

function loadChatCustomizationSettings() {
    const savedSettings = localStorage.getItem('quantumChatCustomization');
    if (savedSettings) {
        const settings = JSON.parse(savedSettings);
        applyChatCustomization(settings);
        
        if (settings.fontSize) {
            const fontSizeValue = parseInt(settings.fontSize);
            document.getElementById('fontSizeSlider').value = fontSizeValue;
            updateFontSizePreview(fontSizeValue);
            highlightMatchingPreset(fontSizeValue);
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        if (settings.boldText !== undefined) {
            document.getElementById('boldTextToggle').checked = settings.boldText;
        }
        if (settings.lineHeight !== undefined) {
            document.getElementById('lineHeightToggle').checked = settings.lineHeight;
        }
        if (settings.showPercentage !== undefined) {
            document.getElementById('showPercentageToggle').checked = settings.showPercentage;
        }
    }
}

function saveChatCustomizationSettings() {
    const fontSize = document.getElementById('fontSizeSlider').value;
    const boldText = document.getElementById('boldTextToggle').checked;
    const lineHeight = document.getElementById('lineHeightToggle').checked;
    const showPercentage = document.getElementById('showPercentageToggle').checked;
    
    const settings = {
        fontSize: fontSize + 'px',
        boldText: boldText,
        lineHeight: lineHeight,
        showPercentage: showPercentage,
        lastUpdated: Date.now()
    };
    
    localStorage.setItem('quantumChatCustomization', JSON.stringify(settings));
    applyChatCustomization(settings);
    
    showAdvancedNotification("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–æ–≤ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã", "success");
    document.getElementById('chatCustomizationModal').classList.remove('active');
}

function resetChatCustomizationSettings() {
    if (confirm("–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?")) {
        localStorage.removeItem('quantumChatCustomization');
        document.getElementById('fontSizeSlider').value = 14;
        document.getElementById('boldTextToggle').checked = false;
        document.getElementById('lineHeightToggle').checked = false;
        document.getElementById('showPercentageToggle').checked = false;
        
        updateFontSizePreview(14);
        highlightMatchingPreset(14);
        removeChatCustomization();
        
        showAdvancedNotification("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã", "info");
    }
}

function applyChatCustomization(settings) {
    let styleElement = document.getElementById('chat-customization-styles');
    if (!styleElement) {
        styleElement = document.createElement('style');
        styleElement.id = 'chat-customization-styles';
        document.head.appendChild(styleElement);
    }
    
    let css = '';
    
    if (settings.fontSize) {
        css += `
            .message {
                font-size: ${settings.fontSize} !important;
            }
            .chat-item-last-message {
                font-size: ${parseInt(settings.fontSize) - 1}px !important;
            }
            .user-item-status {
                font-size: ${parseInt(settings.fontSize) - 2}px !important;
            }
            .timestamp {
                font-size: ${parseInt(settings.fontSize) - 3}px !important;
            }
            .sender {
                font-size: ${parseInt(settings.fontSize) - 3}px !important;
            }
        `;
    }
    
    if (settings.boldText) {
        css += `
            .message {
                font-weight: 600 !important;
            }
        `;
    }
    
    if (settings.lineHeight) {
        css += `
            .message {
                line-height: 1.6 !important;
            }
        `;
    }
    
    styleElement.textContent = css;
}

function removeChatCustomization() {
    const styleElement = document.getElementById('chat-customization-styles');
    if (styleElement) {
        styleElement.remove();
    }
}

function setFontSizeByPreset(size) {
    document.getElementById('fontSizeSlider').value = size;
    updateFontSizePreview(size);
    updateReadabilityStats(size);
}

function updateFontSizePreview(size) {
    document.getElementById('currentSizeDisplay').textContent = size + 'px';
    document.getElementById('customSizeValue').textContent = size + 'px';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
    const previewMessages = document.querySelectorAll('.preview-message');
    previewMessages.forEach(msg => {
        msg.style.fontSize = size + 'px';
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
    if (document.getElementById('showPercentageToggle').checked) {
        const percentage = Math.round((size / 14) * 100);
        document.getElementById('currentSizeDisplay').textContent = percentage + '%';
    }
}

function updateAllPreviews() {
    const currentSize = document.getElementById('fontSizeSlider').value;
    updateFontSizePreview(parseInt(currentSize));
    updatePreview();
}

function updatePreview() {
    const boldText = document.getElementById('boldTextToggle').checked;
    const lineHeight = document.getElementById('lineHeightToggle').checked;
    
    const previewMessages = document.querySelectorAll('.preview-message');
    previewMessages.forEach(msg => {
        msg.style.fontWeight = boldText ? '600' : '400';
        msg.style.lineHeight = lineHeight ? '1.6' : '1.4';
    });
}

function updateReadabilityStats(size) {
    const score = Math.min(100, Math.max(60, 70 + (size - 12) * 5));
    const messagesPerScreen = Math.max(3, Math.min(8, 10 - (size - 12) * 0.7));
    
    document.getElementById('readabilityScore').textContent = Math.round(score) + '%';
    document.getElementById('messageCount').textContent = Math.round(messagesPerScreen);
}

function highlightActivePreset(activeBtn) {
    document.querySelectorAll('.preset-btn').forEach(btn => {
        btn.style.background = 'var(--action-btn-bg)';
        btn.style.borderColor = 'var(--border-color)';
        btn.style.transform = 'scale(1)';
    });
    
    activeBtn.style.background = 'linear-gradient(135deg, #4facfe, #00f2fe)';
    activeBtn.style.borderColor = '#4facfe';
    activeBtn.style.color = 'white';
    activeBtn.style.transform = 'scale(1.05)';
}

function highlightMatchingPreset(size) {
    const presets = document.querySelectorAll('.preset-btn');
    let matched = false;
    
    presets.forEach(btn => {
        if (btn.getAttribute('data-size') === size) {
            highlightActivePreset(btn);
            matched = true;
        }
    });
    
    if (!matched) {
        presets.forEach(btn => {
            btn.style.background = 'var(--action-btn-bg)';
            btn.style.borderColor = 'var(--border-color)';
            btn.style.color = 'var(--text-color)';
            btn.style.transform = 'scale(1)';
        });
    }
}

function togglePercentageDisplay() {
    const showPercentage = document.getElementById('showPercentageToggle').checked;
    const currentSize = document.getElementById('fontSizeSlider').value;
    
    if (showPercentage) {
        const percentage = Math.round((currentSize / 14) * 100);
        document.getElementById('currentSizeDisplay').textContent = percentage + '%';
    } else {
        document.getElementById('currentSizeDisplay').textContent = currentSize + 'px';
    }
}

function testInRealChat() {
    const modal = document.getElementById('chatCustomizationModal');
    modal.classList.remove('active');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
    showAdvancedNotification("–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª—é–±–æ–π —á–∞—Ç —á—Ç–æ–±—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "info", 4000);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
    const fontSize = document.getElementById('fontSizeSlider').value;
    const boldText = document.getElementById('boldTextToggle').checked;
    const lineHeight = document.getElementById('lineHeightToggle').checked;
    
    const testSettings = {
        fontSize: fontSize + 'px',
        boldText: boldText,
        lineHeight: lineHeight,
        isTest: true
    };
    
    applyChatCustomization(testSettings);
}

function showAdvancedNotification(message, type = "info", duration = 3000) {
    const notification = document.createElement('div');
    notification.className = 'notification advanced';
    notification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 10px;">
            <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}" 
               style="color: ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : '#2196F3'}"></i>
            <span>${message}</span>
        </div>
    `;
    
    notification.style.cssText = `
        position: fixed; 
        top: 80px; 
        right: 20px; 
        background: var(--header-bg); 
        color: var(--text-color); 
        padding: 15px 20px; 
        border-radius: 12px; 
        z-index: 10000; 
        animation: slideInRight 0.4s ease;
        border-left: 4px solid ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : '#2196F3'};
        box-shadow: 0 4px 20px rgba(0,0,0,0.15);
        max-width: 350px;
        backdrop-filter: blur(10px);
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        if (notification.parentNode) {
            notification.style.animation = 'slideOutRight 0.4s ease';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 400);
        }
    }, duration);
}

function adaptForMobile() {
    const modal = document.getElementById('chatCustomizationModal');
    if (!modal) return;
    
    const modalContent = modal.querySelector('.modal-content');
    if (window.innerWidth <= 768) {
        modalContent.style.width = '95%';
        modalContent.style.maxWidth = '95%';
        modalContent.style.padding = '15px';
        modalContent.style.margin = '10px auto';
        modalContent.style.maxHeight = '90vh';
        modalContent.style.overflowY = 'auto';
        
        // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø—Ä–µ—Å–µ—Ç—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        const presetGrid = modal.querySelector('.preset-buttons');
        if (presetGrid) {
            presetGrid.style.gridTemplateColumns = 'repeat(2, 1fr)';
            presetGrid.style.gap = '6px';
        }
        
        // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        const actionButtons = modal.querySelector('.action-buttons');
        if (actionButtons) {
            actionButtons.style.gridTemplateColumns = '1fr';
        }
    } else {
        modalContent.style.width = '';
        modalContent.style.maxWidth = '500px';
        modalContent.style.padding = '';
        modalContent.style.margin = '';
        modalContent.style.maxHeight = '';
        
        const presetGrid = modal.querySelector('.preset-buttons');
        if (presetGrid) {
            presetGrid.style.gridTemplateColumns = 'repeat(4, 1fr)';
            presetGrid.style.gap = '8px';
        }
        
        const actionButtons = modal.querySelector('.action-buttons');
        if (actionButtons) {
            actionButtons.style.gridTemplateColumns = '1fr 1fr';
        }
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏
const style = document.createElement('style');
style.textContent = `
    @keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    @keyframes slideOutRight {
        from {
            transform: translateX(0);
            opacity: 1;
        }
        to {
            transform: translateX(100%);
            opacity: 0;
        }
    }
    
    .preset-btn:hover, .action-btn:hover {
        transform: translateY(-2px) !important;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15) !important;
    }
    
    .action-btn.primary:hover {
        transform: translateY(-2px) scale(1.02) !important;
    }
`;
document.head.appendChild(style);

// –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', adaptForMobile);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
setTimeout(adaptForMobile, 200);
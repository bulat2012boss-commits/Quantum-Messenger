// message-reactions.js
// –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

(function() {
    'use strict';
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
    let messageReactions = {};
    let currentUserReactions = {};
    let currentUserId = '';
    let currentUserName = '';
    let currentChatId = '';
    
    // –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ (—ç–º–æ–¥–∑–∏)
    const availableReactions = ['üëç', '‚ù§Ô∏è', 'üòÇ', 'üòÆ', 'üò¢', 'üò°', 'üéâ', 'üëè', 'üî•', '‚≠ê'];
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Ä–µ–∞–∫—Ü–∏–π
    function initMessageReactions() {
        console.log("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è");
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ Firebase –∏ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        const initInterval = setInterval(() => {
            if (window.userId && window.database) {
                clearInterval(initInterval);
                setupReactions();
            }
        }, 100);
    }
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∞–∫—Ü–∏–π
    function setupReactions() {
        currentUserId = window.userId;
        currentUserName = window.currentUser;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏
        loadMessageReactions();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
        addReactionHandlers();
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π
        patchMessageFunctions();
        
        console.log("‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–µ–∞–∫—Ü–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–∫—Ü–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    function loadMessageReactions() {
        if (!currentUserId) return;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        window.database.ref('messageReactions').orderByChild('userId').equalTo(currentUserId).on('value', (snapshot) => {
            if (snapshot.exists()) {
                currentUserReactions = {};
                snapshot.forEach((childSnapshot) => {
                    const reaction = childSnapshot.val();
                    currentUserReactions[reaction.messageId] = reaction;
                });
                updateReactionsDisplay();
            }
        });
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
        if (currentChatId) {
            window.database.ref('messageReactions').orderByChild('chatId').equalTo(currentChatId).on('value', (snapshot) => {
                if (snapshot.exists()) {
                    messageReactions = {};
                    snapshot.forEach((childSnapshot) => {
                        const reaction = childSnapshot.val();
                        if (!messageReactions[reaction.messageId]) {
                            messageReactions[reaction.messageId] = [];
                        }
                        messageReactions[reaction.messageId].push(reaction);
                    });
                    updateReactionsDisplay();
                }
            });
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
    function addReactionHandlers() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
        document.addEventListener('click', handleReactionClick);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–≥–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∞–∫—Ü–∏–π
        setupLongPressHandler();
        
        // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ DOM –¥–ª—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        setupDOMObserver();
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
    function handleReactionClick(e) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ä–µ–∞–∫—Ü–∏—é
        if (e.target.classList.contains('message-reaction') || 
            e.target.parentElement.classList.contains('message-reaction')) {
            const reactionElement = e.target.classList.contains('message-reaction') ? 
                e.target : e.target.parentElement;
            const messageElement = reactionElement.closest('.message');
            if (messageElement && messageElement.dataset.messageId) {
                showReactionPicker(messageElement.dataset.messageId, reactionElement);
            }
        }
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–æ–ª–≥–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è
    function setupLongPressHandler() {
        let longPressTimer;
        let longPressTarget;
        
        document.addEventListener('mousedown', (e) => {
            const messageElement = e.target.closest('.message');
            if (messageElement && !e.target.classList.contains('message-reaction') && 
                messageElement.dataset.messageId) {
                longPressTarget = messageElement;
                longPressTimer = setTimeout(() => {
                    showReactionPicker(messageElement.dataset.messageId, messageElement);
                }, 500);
            }
        });
        
        document.addEventListener('mouseup', () => {
            clearTimeout(longPressTimer);
        });
        
        document.addEventListener('touchstart', (e) => {
            const messageElement = e.target.closest('.message');
            if (messageElement && !e.target.classList.contains('message-reaction') && 
                messageElement.dataset.messageId) {
                longPressTarget = messageElement;
                longPressTimer = setTimeout(() => {
                    showReactionPicker(messageElement.dataset.messageId, messageElement);
                }, 500);
            }
        });
        
        document.addEventListener('touchend', () => {
            clearTimeout(longPressTimer);
        });
    }
    
    // –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
    function setupDOMObserver() {
        const observer = new MutationObserver((mutations) => {
            mutations.forEach((mutation) => {
                if (mutation.type === 'childList') {
                    mutation.addedNodes.forEach((node) => {
                        if (node.nodeType === 1 && node.classList && node.classList.contains('message')) {
                            // –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π
                            setTimeout(updateReactionsDisplay, 100);
                        }
                    });
                }
            });
        });
        
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    }
    
    // –ü–æ–∫–∞–∑ –ø–∞–Ω–µ–ª–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∞–∫—Ü–∏–π
    function showReactionPicker(messageId, targetElement) {
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∏–∫–µ—Ä, –µ—Å–ª–∏ –µ—Å—Ç—å
        closeReactionPicker();
        
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–∏–∫–µ—Ä–∞ —Ä–µ–∞–∫—Ü–∏–π
        const reactionPicker = document.createElement('div');
        reactionPicker.id = 'reactionPicker';
        reactionPicker.className = 'reaction-picker';
        reactionPicker.dataset.messageId = messageId;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        addReactionPickerStyles();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
        availableReactions.forEach(reaction => {
            const reactionBtn = document.createElement('button');
            reactionBtn.className = 'reaction-option';
            reactionBtn.textContent = reaction;
            reactionBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                addReactionToMessage(messageId, reaction);
            });
            reactionPicker.appendChild(reactionBtn);
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if (currentUserReactions[messageId]) {
            const removeBtn = document.createElement('button');
            removeBtn.className = 'reaction-option remove-reaction';
            removeBtn.innerHTML = '‚úï';
            removeBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                removeReactionFromMessage(messageId);
            });
            reactionPicker.appendChild(removeBtn);
        }
        
        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –ø–∏–∫–µ—Ä —Ä—è–¥–æ–º —Å —Ü–µ–ª–µ–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
        const rect = targetElement.getBoundingClientRect();
        reactionPicker.style.position = 'fixed';
        reactionPicker.style.left = `${rect.left}px`;
        reactionPicker.style.top = `${rect.top - 50}px`;
        reactionPicker.style.zIndex = '10000';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–∏–∫–µ—Ä –≤ DOM
        document.body.appendChild(reactionPicker);
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–∏–∫–µ—Ä–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        setTimeout(() => {
            document.addEventListener('click', closeReactionPicker);
        }, 10);
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∞–∫—Ü–∏–π
    function closeReactionPicker() {
        const reactionPicker = document.getElementById('reactionPicker');
        if (reactionPicker) {
            reactionPicker.remove();
            document.removeEventListener('click', closeReactionPicker);
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
    function addReactionToMessage(messageId, reaction) {
        if (!currentUserId || !messageId || !currentChatId) return;
        
        // –°–æ–∑–¥–∞–µ–º ID –¥–ª—è —Ä–µ–∞–∫—Ü–∏–∏
        const reactionId = `reaction_${currentUserId}_${messageId}`;
        
        // –î–∞–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏
        const reactionData = {
            id: reactionId,
            messageId: messageId,
            chatId: currentChatId,
            userId: currentUserId,
            userName: currentUserName,
            reaction: reaction,
            timestamp: Date.now()
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        window.database.ref(`messageReactions/${reactionId}`).set(reactionData)
            .then(() => {
                console.log(`‚úÖ –†–µ–∞–∫—Ü–∏—è ${reaction} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é ${messageId}`);
                closeReactionPicker();
                showTemporaryNotification(`–†–µ–∞–∫—Ü–∏—è ${reaction} –¥–æ–±–∞–≤–ª–µ–Ω–∞`);
            })
            .catch((error) => {
                console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–∞–∫—Ü–∏–∏:", error);
            });
    }
    
    // –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è
    function removeReactionFromMessage(messageId) {
        if (!currentUserId || !messageId) return;
        
        const reactionId = `reaction_${currentUserId}_${messageId}`;
        
        // –£–¥–∞–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        window.database.ref(`messageReactions/${reactionId}`).remove()
            .then(() => {
                console.log(`‚úÖ –†–µ–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏—è ${messageId}`);
                closeReactionPicker();
                showTemporaryNotification("–†–µ–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞");
            })
            .catch((error) => {
                console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–µ–∞–∫—Ü–∏–∏:", error);
            });
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
    function updateReactionsDisplay() {
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ
        const messages = document.querySelectorAll('.message');
        
        messages.forEach(message => {
            const messageId = message.dataset.messageId;
            if (!messageId) return;
            
            // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∞–∫—Ü–∏–∏
            const existingReactions = message.querySelector('.message-reactions');
            if (existingReactions) {
                existingReactions.remove();
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            const reactions = messageReactions[messageId];
            if (reactions && reactions.length > 0) {
                addReactionsToMessageElement(message, reactions);
            }
        });
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π –∫ —ç–ª–µ–º–µ–Ω—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è
    function addReactionsToMessageElement(messageElement, reactions) {
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ —Ç–∏–ø—É
        const reactionCounts = {};
        reactions.forEach(reaction => {
            if (!reactionCounts[reaction.reaction]) {
                reactionCounts[reaction.reaction] = {
                    count: 0,
                    users: []
                };
            }
            reactionCounts[reaction.reaction].count++;
            reactionCounts[reaction.reaction].users.push(reaction.userName);
        });
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
        const reactionsContainer = document.createElement('div');
        reactionsContainer.className = 'message-reactions';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ä–µ–∞–∫—Ü–∏—é —Å —Å—á–µ—Ç—á–∏–∫–æ–º
        Object.keys(reactionCounts).forEach(reaction => {
            const reactionElement = document.createElement('span');
            reactionElement.className = 'message-reaction';
            
            // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º, –µ—Å–ª–∏ —ç—Ç–æ —Ä–µ–∞–∫—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const userReaction = currentUserReactions[messageElement.dataset.messageId];
            if (userReaction && userReaction.reaction === reaction) {
                reactionElement.classList.add('user-reaction');
            }
            
            reactionElement.innerHTML = `
                <span class="reaction-emoji">${reaction}</span>
                <span class="reaction-count">${reactionCounts[reaction].count}</span>
            `;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É —Å –∏–º–µ–Ω–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            reactionElement.title = reactionCounts[reaction].users.join(', ');
            
            reactionsContainer.appendChild(reactionElement);
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        messageElement.appendChild(reactionsContainer);
    }
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π
    function patchMessageFunctions() {
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è currentChatId
        const originalOpenChat = window.openChat;
        if (originalOpenChat) {
            window.openChat = function(userId, userName, chatId = null) {
                currentChatId = chatId || window.generateChatId(userId);
                const result = originalOpenChat.apply(this, arguments);
                
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
                setTimeout(() => {
                    loadMessageReactions();
                }, 1000);
                
                return result;
            };
        }
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
        const originalAddMessageToChat = window.addMessageToChat;
        if (originalAddMessageToChat) {
            window.addMessageToChat = function(message) {
                const result = originalAddMessageToChat.apply(this, arguments);
                
                // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º data-–∞—Ç—Ä–∏–±—É—Ç
                const messages = document.querySelectorAll('.message');
                const lastMessage = messages[messages.length - 1];
                if (lastMessage && message.id) {
                    lastMessage.dataset.messageId = message.id;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                    if (messageReactions[message.id]) {
                        addReactionsToMessageElement(lastMessage, messageReactions[message.id]);
                    }
                }
                
                return result;
            };
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
    function addReactionPickerStyles() {
        if (document.getElementById('reaction-styles')) return;
        
        const styles = `
            <style id="reaction-styles">
                .message-reactions {
                    display: flex;
                    flex-wrap: wrap;
                    gap: 4px;
                    margin-top: 5px;
                    align-items: center;
                }
                
                .message-reaction {
                    display: inline-flex;
                    align-items: center;
                    gap: 2px;
                    padding: 2px 6px;
                    background: rgba(255, 255, 255, 0.2);
                    border-radius: 12px;
                    font-size: 12px;
                    cursor: pointer;
                    transition: all 0.2s ease;
                    border: 1px solid transparent;
                }
                
                .message-reaction:hover {
                    background: rgba(255, 255, 255, 0.3);
                    transform: scale(1.05);
                }
                
                .message-reaction.user-reaction {
                    background: rgba(79, 172, 254, 0.3);
                    border-color: rgba(79, 172, 254, 0.5);
                }
                
                .reaction-emoji {
                    font-size: 12px;
                }
                
                .reaction-count {
                    font-size: 10px;
                    font-weight: 600;
                }
                
                .reaction-picker {
                    display: flex;
                    gap: 5px;
                    padding: 8px;
                    background: var(--header-bg, rgba(0, 0, 0, 0.8));
                    border-radius: 24px;
                    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
                    border: 1px solid var(--border-color, rgba(255, 255, 255, 0.1));
                    backdrop-filter: blur(10px);
                    animation: reactionPickerAppear 0.2s ease;
                }
                
                @keyframes reactionPickerAppear {
                    from {
                        opacity: 0;
                        transform: scale(0.8) translateY(10px);
                    }
                    to {
                        opacity: 1;
                        transform: scale(1) translateY(0);
                    }
                }
                
                .reaction-option {
                    width: 32px;
                    height: 32px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    background: rgba(255, 255, 255, 0.1);
                    border: none;
                    border-radius: 50%;
                    font-size: 16px;
                    cursor: pointer;
                    transition: all 0.2s ease;
                    color: inherit;
                }
                
                .reaction-option:hover {
                    background: rgba(255, 255, 255, 0.2);
                    transform: scale(1.2);
                }
                
                .reaction-option.remove-reaction {
                    color: #ff6b6b;
                    font-size: 14px;
                }
            </style>
        `;
        
        document.head.insertAdjacentHTML('beforeend', styles);
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    function showTemporaryNotification(message) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é showNotification –µ—Å–ª–∏ –µ—Å—Ç—å
        if (window.showNotification) {
            window.showNotification(message);
        } else {
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: rgba(0, 0, 0, 0.8);
                color: white;
                padding: 10px 15px;
                border-radius: 8px;
                z-index: 10000;
                animation: slideIn 0.3s ease;
            `;
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 2000);
        }
    }
    
    // –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initMessageReactions);
    } else {
        initMessageReactions();
    }
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    window.messageReactions = {
        init: initMessageReactions,
        addReaction: addReactionToMessage,
        removeReaction: removeReactionFromMessage,
        updateDisplay: updateReactionsDisplay
    };
    
})();
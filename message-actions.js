// privacy-functions-fixed.js
// –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –±–µ–∑ –±–∞–≥–æ–≤

document.addEventListener('DOMContentLoaded', function() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const privacySettings = loadPrivacySettings();
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
    createPrivacyPage();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    setupPrivacyHandlers();
    
    console.log('üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å: –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!');
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
function loadPrivacySettings() {
    const defaultSettings = {
        whoCanMessage: 'all',
        showOnlineStatus: true,
        showLastSeen: true,
        showProfilePhoto: true,
        showStatusText: true,
        readReceipts: true,
        typingIndicators: true,
        messageRequests: true,
        blockedUsers: []
    };
    
    const saved = localStorage.getItem('quantum_privacy_settings');
    return saved ? {...defaultSettings, ...JSON.parse(saved)} : defaultSettings;
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
function savePrivacySettings(settings) {
    localStorage.setItem('quantum_privacy_settings', JSON.stringify(settings));
    showPrivacyNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
function createPrivacyPage() {
    const settings = loadPrivacySettings();
    
    const privacyHTML = `
        <div id="privacyPage" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: var(--primary-bg); z-index: 10000; overflow-y: auto;">
            <div style="position: sticky; top: 0; background: var(--header-bg); border-bottom: 1px solid var(--border-color); padding: 15px; display: flex; align-items: center; gap: 15px; z-index: 10;">
                <button onclick="closePrivacyPage()" style="background: none; border: none; color: var(--text-color); font-size: 20px; padding: 8px; border-radius: 50%; cursor: pointer; min-width: 44px; min-height: 44px;">
                    <i class="fas fa-arrow-left"></i>
                </button>
                <h1 style="margin: 0; font-size: 18px; font-weight: 600;">–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h1>
            </div>
            
            <div style="padding: 20px 15px;">
                <!-- –ö—Ç–æ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –º–Ω–µ -->
                <div style="background: var(--other-msg-bg); border-radius: 12px; padding: 20px; margin-bottom: 20px;">
                    <h3 style="margin: 0 0 15px 0; display: flex; align-items: center; gap: 10px;">
                        <i class="fas fa-comments"></i> –ö—Ç–æ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –º–Ω–µ
                    </h3>
                    <div style="display: flex; flex-direction: column; gap: 10px;">
                        <div onclick="setWhoCanMessage('all')" style="display: flex; align-items: center; padding: 15px; border-radius: 10px; cursor: pointer; background: ${settings.whoCanMessage === 'all' ? 'rgba(79, 172, 254, 0.1)' : 'rgba(255,255,255,0.05)'}; border: 2px solid ${settings.whoCanMessage === 'all' ? '#4facfe' : 'transparent'};">
                            <div style="width: 40px; height: 40px; border-radius: 50%; background: rgba(79, 172, 254, 0.2); display: flex; align-items: center; justify-content: center; margin-right: 15px; color: #4facfe;">
                                <i class="fas fa-globe"></i>
                            </div>
                            <div style="flex: 1;">
                                <div style="font-weight: 600;">–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</div>
                                <div style="font-size: 12px; opacity: 0.7;">–õ—é–±–æ–π –º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –≤–∞–º</div>
                            </div>
                            ${settings.whoCanMessage === 'all' ? '<i class="fas fa-check" style="color: #4facfe;"></i>' : ''}
                        </div>
                        
                        <div onclick="setWhoCanMessage('contacts')" style="display: flex; align-items: center; padding: 15px; border-radius: 10px; cursor: pointer; background: ${settings.whoCanMessage === 'contacts' ? 'rgba(79, 172, 254, 0.1)' : 'rgba(255,255,255,0.05)'}; border: 2px solid ${settings.whoCanMessage === 'contacts' ? '#4facfe' : 'transparent'};">
                            <div style="width: 40px; height: 40px; border-radius: 50%; background: rgba(79, 172, 254, 0.2); display: flex; align-items: center; justify-content: center; margin-right: 15px; color: #4facfe;">
                                <i class="fas fa-users"></i>
                            </div>
                            <div style="flex: 1;">
                                <div style="font-weight: 600;">–¢–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç—ã</div>
                                <div style="font-size: 12px; opacity: 0.7;">–¢–æ–ª—å–∫–æ –ª—é–¥–∏ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</div>
                            </div>
                            ${settings.whoCanMessage === 'contacts' ? '<i class="fas fa-check" style="color: #4facfe;"></i>' : ''}
                        </div>
                        
                        <div onclick="setWhoCanMessage('nobody')" style="display: flex; align-items: center; padding: 15px; border-radius: 10px; cursor: pointer; background: ${settings.whoCanMessage === 'nobody' ? 'rgba(79, 172, 254, 0.1)' : 'rgba(255,255,255,0.05)'}; border: 2px solid ${settings.whoCanMessage === 'nobody' ? '#4facfe' : 'transparent'};">
                            <div style="width: 40px; height: 40px; border-radius: 50%; background: rgba(79, 172, 254, 0.2); display: flex; align-items: center; justify-content: center; margin-right: 15px; color: #4facfe;">
                                <i class="fas fa-ban"></i>
                            </div>
                            <div style="flex: 1;">
                                <div style="font-weight: 600;">–ù–∏–∫—Ç–æ</div>
                                <div style="font-size: 12px; opacity: 0.7;">–ù–∏–∫—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –≤–∞–º –ø–µ—Ä–≤—ã–º</div>
                            </div>
                            ${settings.whoCanMessage === 'nobody' ? '<i class="fas fa-check" style="color: #4facfe;"></i>' : ''}
                        </div>
                    </div>
                </div>

                <!-- –í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è -->
                <div style="background: var(--other-msg-bg); border-radius: 12px; padding: 20px; margin-bottom: 20px;">
                    <h3 style="margin: 0 0 15px 0; display: flex; align-items: center; gap: 10px;">
                        <i class="fas fa-eye"></i> –í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è
                    </h3>
                    <div style="display: flex; flex-direction: column; gap: 15px;">
                        <div style="display: flex; justify-content: space-between; align-items: center; padding: 10px 0;">
                            <div>
                                <div style="font-weight: 500;">–°—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω</div>
                                <div style="font-size: 12px; opacity: 0.7;">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –≤—ã –≤ —Å–µ—Ç–∏</div>
                            </div>
                            <label style="position: relative; display: inline-block; width: 50px; height: 24px;">
                                <input type="checkbox" ${settings.showOnlineStatus ? 'checked' : ''} onchange="toggleOnlineStatus(this.checked)" style="opacity: 0; width: 0; height: 0;">
                                <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: ${settings.showOnlineStatus ? '#4facfe' : '#ccc'}; transition: .4s; border-radius: 24px;"></span>
                                <span style="position: absolute; content: ''; height: 16px; width: 16px; left: ${settings.showOnlineStatus ? '26px' : '4px'}; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                            </label>
                        </div>
                        
                        <div style="display: flex; justify-content: space-between; align-items: center; padding: 10px 0;">
                            <div>
                                <div style="font-weight: 500;">–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è</div>
                                <div style="font-size: 12px; opacity: 0.7;">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –≤—ã –±—ã–ª–∏ –≤ —Å–µ—Ç–∏</div>
                            </div>
                            <label style="position: relative; display: inline-block; width: 50px; height: 24px;">
                                <input type="checkbox" ${settings.showLastSeen ? 'checked' : ''} onchange="toggleLastSeen(this.checked)" style="opacity: 0; width: 0; height: 0;">
                                <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: ${settings.showLastSeen ? '#4facfe' : '#ccc'}; transition: .4s; border-radius: 24px;"></span>
                                <span style="position: absolute; content: ''; height: 16px; width: 16px; left: ${settings.showLastSeen ? '26px' : '4px'}; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                            </label>
                        </div>
                        
                        <div style="display: flex; justify-content: space-between; align-items: center; padding: 10px 0;">
                            <div>
                                <div style="font-weight: 500;">–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è</div>
                                <div style="font-size: 12px; opacity: 0.7;">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–∞—à–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è</div>
                            </div>
                            <label style="position: relative; display: inline-block; width: 50px; height: 24px;">
                                <input type="checkbox" ${settings.showProfilePhoto ? 'checked' : ''} onchange="toggleProfilePhoto(this.checked)" style="opacity: 0; width: 0; height: 0;">
                                <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: ${settings.showProfilePhoto ? '#4facfe' : '#ccc'}; transition: .4s; border-radius: 24px;"></span>
                                <span style="position: absolute; content: ''; height: 16px; width: 16px; left: ${settings.showProfilePhoto ? '26px' : '4px'}; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                            </label>
                        </div>
                    </div>
                </div>

                <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ -->
                <div style="background: var(--other-msg-bg); border-radius: 12px; padding: 20px; margin-bottom: 20px;">
                    <h3 style="margin: 0 0 15px 0; display: flex; align-items: center; gap: 10px;">
                        <i class="fas fa-cog"></i> –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </h3>
                    <div style="display: flex; flex-direction: column; gap: 15px;">
                        <div style="display: flex; justify-content: space-between; align-items: center; padding: 10px 0;">
                            <div>
                                <div style="font-weight: 500;">–ì–∞–ª–æ—á–∫–∏ –ø—Ä–æ—á—Ç–µ–Ω–∏—è</div>
                                <div style="font-size: 12px; opacity: 0.7;">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å, —á—Ç–æ –≤—ã –ø—Ä–æ—á–∏—Ç–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è</div>
                            </div>
                            <label style="position: relative; display: inline-block; width: 50px; height: 24px;">
                                <input type="checkbox" ${settings.readReceipts ? 'checked' : ''} onchange="toggleReadReceipts(this.checked)" style="opacity: 0; width: 0; height: 0;">
                                <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: ${settings.readReceipts ? '#4facfe' : '#ccc'}; transition: .4s; border-radius: 24px;"></span>
                                <span style="position: absolute; content: ''; height: 16px; width: 16px; left: ${settings.readReceipts ? '26px' : '4px'}; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                            </label>
                        </div>
                        
                        <div style="display: flex; justify-content: space-between; align-items: center; padding: 10px 0;">
                            <div>
                                <div style="font-weight: 500;">–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞</div>
                                <div style="font-size: 12px; opacity: 0.7;">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –≤—ã –ø–µ—á–∞—Ç–∞–µ—Ç–µ</div>
                            </div>
                            <label style="position: relative; display: inline-block; width: 50px; height: 24px;">
                                <input type="checkbox" ${settings.typingIndicators ? 'checked' : ''} onchange="toggleTypingIndicators(this.checked)" style="opacity: 0; width: 0; height: 0;">
                                <span style="position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: ${settings.typingIndicators ? '#4facfe' : '#ccc'}; transition: .4s; border-radius: 24px;"></span>
                                <span style="position: absolute; content: ''; height: 16px; width: 16px; left: ${settings.typingIndicators ? '26px' : '4px'}; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%;"></span>
                            </label>
                        </div>
                    </div>
                </div>

                <!-- –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ -->
                <div style="background: var(--other-msg-bg); border-radius: 12px; padding: 20px; margin-bottom: 20px;">
                    <h3 style="margin: 0 0 15px 0; display: flex; align-items: center; gap: 10px;">
                        <i class="fas fa-user-slash"></i> –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
                    </h3>
                    <div id="blockedUsersList" style="margin-bottom: 15px; max-height: 200px; overflow-y: auto;">
                        ${renderBlockedUsers()}
                    </div>
                    <button onclick="showBlockUserModal()" style="width: 100%; padding: 12px; background: transparent; border: 2px dashed var(--border-color); border-radius: 8px; color: var(--text-color); cursor: pointer; display: flex; align-items: center; justify-content: center; gap: 8px;">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    </button>
                </div>

                <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                <div style="background: var(--other-msg-bg); border-radius: 12px; padding: 20px;">
                    <h3 style="margin: 0 0 15px 0; display: flex; align-items: center; gap: 10px;">
                        <i class="fas fa-shield-alt"></i> –î–µ–π—Å—Ç–≤–∏—è
                    </h3>
                    <div style="display: flex; flex-direction: column; gap: 10px;">
                        <button onclick="exportPrivacyData()" style="display: flex; align-items: center; gap: 15px; padding: 15px; background: rgba(255,255,255,0.05); border: none; border-radius: 10px; color: var(--text-color); cursor: pointer; text-align: left;">
                            <div style="width: 40px; height: 40px; border-radius: 50%; background: rgba(79, 172, 254, 0.2); display: flex; align-items: center; justify-content: center; color: #4facfe;">
                                <i class="fas fa-download"></i>
                            </div>
                            <div>
                                <div style="font-weight: 600;">–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</div>
                                <div style="font-size: 12px; opacity: 0.7;">–°–∫–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏</div>
                            </div>
                        </button>
                        
                        <button onclick="showPrivacyReport()" style="display: flex; align-items: center; gap: 15px; padding: 15px; background: rgba(255,255,255,0.05); border: none; border-radius: 10px; color: var(--text-color); cursor: pointer; text-align: left;">
                            <div style="width: 40px; height: 40px; border-radius: 50%; background: rgba(79, 172, 254, 0.2); display: flex; align-items: center; justify-content: center; color: #4facfe;">
                                <i class="fas fa-chart-bar"></i>
                            </div>
                            <div>
                                <div style="font-weight: 600;">–û—Ç—á–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏</div>
                                <div style="font-size: 12px; opacity: 0.7;">–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</div>
                            </div>
                        </button>
                        
                        <button onclick="resetPrivacySettings()" style="display: flex; align-items: center; gap: 15px; padding: 15px; background: rgba(255, 53, 69, 0.1); border: none; border-radius: 10px; color: #ff3545; cursor: pointer; text-align: left;">
                            <div style="width: 40px; height: 40px; border-radius: 50%; background: rgba(255, 53, 69, 0.2); display: flex; align-items: center; justify-content: center;">
                                <i class="fas fa-undo"></i>
                            </div>
                            <div>
                                <div style="font-weight: 600;">–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</div>
                                <div style="font-size: 12px; opacity: 0.7;">–í–µ—Ä–Ω—É—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</div>
                            </div>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ DOM
    const existingPage = document.getElementById('privacyPage');
    if (existingPage) {
        existingPage.remove();
    }
    
    document.body.insertAdjacentHTML('beforeend', privacyHTML);
}

// –†–µ–Ω–¥–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function renderBlockedUsers() {
    const settings = loadPrivacySettings();
    
    if (settings.blockedUsers.length === 0) {
        return '<div style="text-align: center; padding: 20px; opacity: 0.7;">–ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>';
    }
    
    return settings.blockedUsers.map(user => `
        <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: rgba(255,255,255,0.05); border-radius: 8px; margin-bottom: 8px;">
            <div style="display: flex; align-items: center; gap: 10px;">
                <div style="width: 40px; height: 40px; border-radius: 50%; background: linear-gradient(45deg, #4facfe, #00f2fe); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;">
                    ${user.name.charAt(0).toUpperCase()}
                </div>
                <div>
                    <div style="font-weight: 500;">${user.name}</div>
                    <div style="font-size: 12px; opacity: 0.7;">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</div>
                </div>
            </div>
            <button onclick="unblockUser('${user.id}')" style="background: #ff4757; color: white; border: none; padding: 8px 12px; border-radius: 6px; cursor: pointer; font-size: 12px;">
                –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
            </button>
        </div>
    `).join('');
}

// –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å—é
function setWhoCanMessage(setting) {
    const settings = loadPrivacySettings();
    settings.whoCanMessage = setting;
    savePrivacySettings(settings);
    updatePrivacyUI();
    showPrivacyNotification(`–¢–µ–ø–µ—Ä—å –ø–∏—Å–∞—Ç—å –≤–∞–º –º–æ–≥—É—Ç: ${getWhoCanMessageText(setting)}`);
}

function toggleOnlineStatus(enabled) {
    const settings = loadPrivacySettings();
    settings.showOnlineStatus = enabled;
    savePrivacySettings(settings);
    showPrivacyNotification(`–°—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω ${enabled ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω'}`);
}

function toggleLastSeen(enabled) {
    const settings = loadPrivacySettings();
    settings.showLastSeen = enabled;
    savePrivacySettings(settings);
    showPrivacyNotification(`–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è ${enabled ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–≤—ã–∫–ª—é—á–µ–Ω–æ'}`);
}

function toggleProfilePhoto(enabled) {
    const settings = loadPrivacySettings();
    settings.showProfilePhoto = enabled;
    savePrivacySettings(settings);
    showPrivacyNotification(`–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è ${enabled ? '–≤–∏–¥–Ω–æ' : '—Å–∫—Ä—ã—Ç–æ'}`);
}

function toggleReadReceipts(enabled) {
    const settings = loadPrivacySettings();
    settings.readReceipts = enabled;
    savePrivacySettings(settings);
    showPrivacyNotification(`–ì–∞–ª–æ—á–∫–∏ –ø—Ä–æ—á—Ç–µ–Ω–∏—è ${enabled ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–≤—ã–∫–ª—é—á–µ–Ω—ã'}`);
}

function toggleTypingIndicators(enabled) {
    const settings = loadPrivacySettings();
    settings.typingIndicators = enabled;
    savePrivacySettings(settings);
    showPrivacyNotification(`–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ ${enabled ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω'}`);
}

// –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function blockUser(userId, userName) {
    const settings = loadPrivacySettings();
    const user = { id: userId, name: userName, blockedAt: Date.now() };
    settings.blockedUsers.push(user);
    savePrivacySettings(settings);
    updateBlockedUsersList();
    showPrivacyNotification(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userName} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
}

// –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function unblockUser(userId) {
    const settings = loadPrivacySettings();
    settings.blockedUsers = settings.blockedUsers.filter(user => user.id !== userId);
    savePrivacySettings(settings);
    updateBlockedUsersList();
    showPrivacyNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
function showBlockUserModal() {
    const username = prompt('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:');
    if (username && username.trim()) {
        const userId = 'user_' + Date.now();
        blockUser(userId, username.trim());
    }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function exportPrivacyData() {
    const settings = loadPrivacySettings();
    const data = JSON.stringify(settings, null, 2);
    const blob = new Blob([data], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'quantum_privacy_settings.json';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    showPrivacyNotification('–î–∞–Ω–Ω—ã–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
}

function showPrivacyReport() {
    const settings = loadPrivacySettings();
    const report = `
–û—Ç—á–µ—Ç –æ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏:

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${settings.blockedUsers.length}
‚Ä¢ –ö—Ç–æ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å: ${getWhoCanMessageText(settings.whoCanMessage)}
‚Ä¢ –°—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω: ${settings.showOnlineStatus ? '–í–∫–ª—é—á–µ–Ω' : '–í—ã–∫–ª—é—á–µ–Ω'}
‚Ä¢ –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è: ${settings.showLastSeen ? '–í–∫–ª—é—á–µ–Ω–æ' : '–í—ã–∫–ª—é—á–µ–Ω–æ'}
‚Ä¢ –ì–∞–ª–æ—á–∫–∏ –ø—Ä–æ—á—Ç–µ–Ω–∏—è: ${settings.readReceipts ? '–í–∫–ª—é—á–µ–Ω—ã' : '–í—ã–∫–ª—é—á–µ–Ω—ã'}
‚Ä¢ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞: ${settings.typingIndicators ? '–í–∫–ª—é—á–µ–Ω' : '–í—ã–∫–ª—é—á–µ–Ω'}

üõ°Ô∏è –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—â–∞—é—Ç –≤–∞—à—É –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å!
    `;
    alert(report);
}

function resetPrivacySettings() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏?')) {
        localStorage.removeItem('quantum_privacy_settings');
        showPrivacyNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ —Å–±—Ä–æ—à–µ–Ω—ã');
        closePrivacyPage();
        setTimeout(() => {
            createPrivacyPage();
            setupPrivacyHandlers();
        }, 100);
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getWhoCanMessageText(setting) {
    const texts = {
        'all': '–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
        'contacts': '–¢–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç—ã', 
        'nobody': '–ù–∏–∫—Ç–æ'
    };
    return texts[setting];
}

function updatePrivacyUI() {
    // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    createPrivacyPage();
    setupPrivacyHandlers();
}

function updateBlockedUsersList() {
    const blockedList = document.getElementById('blockedUsersList');
    if (blockedList) {
        blockedList.innerHTML = renderBlockedUsers();
    }
}

function showPrivacyNotification(message) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é
    if (typeof showNotification === 'function') {
        showNotification(message);
    } else {
        // –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 70px;
            right: 20px;
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 10px 15px;
            border-radius: 8px;
            z-index: 10001;
            animation: slideIn 0.3s ease;
        `;
        notification.textContent = message;
        document.body.appendChild(notification);
        
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 3000);
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
function openPrivacyPage() {
    const page = document.getElementById('privacyPage');
    if (page) {
        page.style.display = 'block';
        document.body.style.overflow = 'hidden';
    }
}

function closePrivacyPage() {
    const page = document.getElementById('privacyPage');
    if (page) {
        page.style.display = 'none';
        document.body.style.overflow = '';
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
function setupPrivacyHandlers() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –≤ –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é
    const privacyBtn = document.getElementById('privacyBtn');
    if (privacyBtn) {
        privacyBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            openPrivacyPage();
        });
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ "–ù–∞–∑–∞–¥" –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    window.addEventListener('popstate', function() {
        closePrivacyPage();
    });
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.openPrivacyPage = openPrivacyPage;
window.closePrivacyPage = closePrivacyPage;
window.setWhoCanMessage = setWhoCanMessage;
window.toggleOnlineStatus = toggleOnlineStatus;
window.toggleLastSeen = toggleLastSeen;
window.toggleProfilePhoto = toggleProfilePhoto;
window.toggleReadReceipts = toggleReadReceipts;
window.toggleTypingIndicators = toggleTypingIndicators;
window.blockUser = blockUser;
window.unblockUser = unblockUser;
window.showBlockUserModal = showBlockUserModal;
window.exportPrivacyData = exportPrivacyData;
window.showPrivacyReport = showPrivacyReport;
window.resetPrivacySettings = resetPrivacySettings;